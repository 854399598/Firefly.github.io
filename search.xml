<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>为 Hexo 绑定自己的域名</title>
      <link href="/2024/12/16/%E4%B8%BA%20Hexo%20%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/"/>
      <url>/2024/12/16/%E4%B8%BA%20Hexo%20%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>上一篇文章我们说了 GitHub 不仅可以给我们的 HEXO 博客提供了免费托管服务，还有免费的的域名，但是以 <mark class="hl-label purple">.github.io</mark>  结尾的域名显得有些冗长且没有个性了，所以我购买了一个域名，为我的 HEXO 博客绑定。</p><h2 id="二、准备域名"><a href="#二、准备域名" class="headerlink" title="二、准备域名"></a>二、准备域名</h2><p>购买域名的地方有很多，腾讯云、阿里云、西部数码等等。因为我的域名是在阿里云购买的，所以我这里就以我阿里云的 DNS 解析演示，其他平台步骤基本上也大相径庭。</p><p>首先我们进入<a href="https://www.aliyun.com/">阿里云</a>官网进行注册，注册好后点击左上角产品，找到域名。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fe51a77cc3.png"/></div></div><p>点进去会看到这个页面，你可以在这选择一个自己喜欢的域名进行注册。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fe5cfee047.png"/></div></div><p>注册好域名后我们进入控制台找到域名点进去（<mark class="hl-label red">注意：阿里云的域名需要实名认证才可使用</mark> ）</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fe6baf11a3.png"/></div></div><p>准备好后我们点进去，找到域名解析，接下来准备工作就完成了。</p><h2 id="三、配置域名"><a href="#三、配置域名" class="headerlink" title="三、配置域名"></a>三、配置域名</h2><h3 id="配置阿里云-DNS-解析"><a href="#配置阿里云-DNS-解析" class="headerlink" title="配置阿里云 DNS 解析"></a>配置阿里云 DNS 解析</h3><p>接下来我们需要在 DNS 中设置一个 CNAME 记录，将自定义域名指向 <mark class="hl-label red">用户名.github.io</mark> 。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fe9e395210.png"/></div></div><h3 id="本地添加-CNAME-文件"><a href="#本地添加-CNAME-文件" class="headerlink" title="本地添加 CNAME 文件"></a>本地添加 CNAME 文件</h3><p>添加记录解析后，我们需要在本地 Hexo 中的 <mark class="hl-label red">source</mark>  文件夹下创建一个 CNAME 文件（不带任何后缀）</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675feb7bd1724.png"/></div></div><p>然后在里面写入你之前在阿里云那里添加的自定义域名 <kbd>Ctrl</kbd> + <kbd>S</kbd> 保存。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fec0786cc5.png"/></div></div><h3 id="修改-Hexo-配置文件"><a href="#修改-Hexo-配置文件" class="headerlink" title="修改 Hexo 配置文件"></a>修改 Hexo 配置文件</h3><p>以上操作完成后我们还需要修改 Hexo 的_config.yml 文件，在 URL 中填入我们的自定义域名。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fed6eab5d5.png"/></div></div><h2 id="四、绑定域名"><a href="#四、绑定域名" class="headerlink" title="四、绑定域名"></a>四、绑定域名</h2><p>上述操作确保无误后，我们再次回到 GitHub Pages 页面，找到 Custom domain 在里面填入自定义域名保存并等待 DNS 检测完成就好了。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fee581ae67.png"/></div></div><p>至此，域名绑定就完成了</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/16/675fef1cca7fb.png"/></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo + GitHub Pages 部署个人博客</title>
      <link href="/2024/12/14/%E4%BD%BF%E7%94%A8%20Hexo%20+%20GitHub%20Pages%20%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/12/14/%E4%BD%BF%E7%94%A8%20Hexo%20+%20GitHub%20Pages%20%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a>Hexo 是什么？</h3><p><a href="https://hexo.io/">Hexo</a> 是一款出色的[静态博客框架]，它基于 Node.js 运行，可以将我们撰写的 <a href="https://daringfireball.net/projects/markdown/">Markdown</a> 文档快速解析渲染成静态的 HTML 网页。</p><h3 id="GitHub-Pages-是什么？"><a href="#GitHub-Pages-是什么？" class="headerlink" title="GitHub Pages 是什么？"></a>GitHub Pages 是什么？</h3><p><a href="https://github.com/">GitHub Pages</a> 是 GitHub 免费提供的<b>静态站点托管服务</b>，让我们可以在 GitHub 仓库里<b>托管和发布自己的静态网站页面</b>，对于个人项目和小型网站来非常合适。</p><h2 id="二、准备"><a href="#二、准备" class="headerlink" title="二、准备"></a>二、准备</h2><h3 id="本地环境"><a href="#本地环境" class="headerlink" title="本地环境"></a>本地环境</h3><ul><li><a href="https://dev.nodejs.cn/learn/how-to-install-nodejs/">Node.js</a> (版本不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="https://git-scm.com/">Git</a> (使用最新版即可)</li></ul><p>安装完毕后可以在cmd里面输入 <mark class="hl-label purple">node -v</mark> 、<mark class="hl-label purple">npm -v</mark>  和 <mark class="hl-label purple">git -v</mark>  查看安装版本。以下是示例↓</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d45c2a4e0b.png"/></div></div><h2 id="三、本地连接-GitHub"><a href="#三、本地连接-GitHub" class="headerlink" title="三、本地连接 GitHub"></a>三、本地连接 GitHub</h2><h3 id="配置用户名与邮箱和创建-SSH-密匙"><a href="#配置用户名与邮箱和创建-SSH-密匙" class="headerlink" title="配置用户名与邮箱和创建 SSH 密匙"></a>配置用户名与邮箱和创建 SSH 密匙</h3><p>创建一个文件夹，名字随意，我这叫 Hexo，然后右键选择 Open Git Bash Here。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d4fe79576e.png"/></div></div><p>然后依次输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;GitHub 用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;GitHub 邮箱&quot;</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;GitHub 邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>出现命令不用管，一路回车就行。创建完后进入 <mark class="hl-label red">C盘 > Users > 用户名 > .ssh</mark>  目录（记得到文件夹上栏“<b>查看</b>” &gt; “<b>显示</b>”中勾选显示“<b>隐藏的项目</b>”）</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d567c81609.png"/></div></div><p>用记事本打开 <mark class="hl-label purple">id_rsa.pub</mark>  并复制里面的内容。</p><h3 id="在-GitHub-中添加-SSH-密钥"><a href="#在-GitHub-中添加-SSH-密钥" class="headerlink" title="在 GitHub 中添加 SSH 密钥"></a>在 GitHub 中添加 SSH 密钥</h3><p>回到 GitHub，进入 Settings，选择左栏的 SSH and GPG keys，点击 New SSH key。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d59b5909dd.png"/></div></div><p>Title 随便取，我这选择用户名作为标题，然后把 <mark class="hl-label purple">id_rsa.pub</mark>  里面的内容到复制到 Key 中，点击 Add SSH key。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d5b002518f.png"/></div></div><h3 id="验证连接"><a href="#验证连接" class="headerlink" title="验证连接"></a>验证连接</h3><p>依旧是在 Git Bash Here 界面中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现 Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?，输入 yes回车即可。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d65d9ceb9a.png"/></div></div><p>若出现下图的提示即表示连接成功。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d64b3a2086.png"/></div></div><h2 id="四、创建-GitHub-仓库"><a href="#四、创建-GitHub-仓库" class="headerlink" title="四、创建 GitHub 仓库"></a>四、创建 GitHub 仓库</h2><ul><li>创建仓库，仓库名称格式要求：<mark class="hl-label red">用户名.github.io</mark> ，如果用户名包含大写字母，仓库名中需要转为小写。</li><li>勾选 Add a README file。</li></ul><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d4b4939a04.png"/></div></div><p>填好后点击 Create repository 创建仓库。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d66e88a93c.png"/></div></div><p>现在我们访问 <mark class="hl-label purple">https://用户名.github.io</mark>  可以看到默认界面。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d676b0379e.png"/></div></div><h2 id="五、本地安装-Hexo"><a href="#五、本地安装-Hexo" class="headerlink" title="五、本地安装 Hexo"></a>五、本地安装 Hexo</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>我们在之前已经创建好的文件夹内，同样右键点击 Open Git Bash Here，然后使用 npm 安装 Hexo。在命令行中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>其中 -g 的作用是安装 hexo-cli 到全局的 node_modules，而不是特定于项目的文件夹，这样就可以在命令行下的任何位置使用该工具的命令，而不是局限于某个项目。</p><p>安装成功后，可以通过以下命令查看 Hexo 的版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>安装成功的话会显示。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d6d846dd1d.png"/></div></div><h3 id="生成博客工程"><a href="#生成博客工程" class="headerlink" title="生成博客工程"></a>生成博客工程</h3><p>生成博客工程文件（文件夹名字自定义，此处以 blog 为例）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog <span class="comment"># 生成博客文件夹，不填名字就是在当前目录生成</span></span><br><span class="line">hexo <span class="built_in">cd</span> blog <span class="comment"># 移动到blog文件夹</span></span><br><span class="line">npm install <span class="comment"># 下载组件</span></span><br><span class="line">hexo init blog &amp;&amp; <span class="built_in">cd</span> blog &amp;&amp; npm install <span class="comment"># 可组合使用</span></span><br></pre></td></tr></table></figure><p>当出现下图提示的时候，说明已经完成了。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d72293380b.png"/></div></div><p>初始化完毕以后，我们可以在 Hexo 程序文件夹中看到 Hexo 程序文件。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d72ac6867a.png"/></div></div><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>完成上述步骤后我们在博客根目录输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g <span class="comment"># 生成静态文件</span></span><br></pre></td></tr></table></figure><p>生成的博客静态文件存放在 <mark class="hl-label red">blog > public</mark>  目录下。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d747d4e846.png"/></div></div><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><p>启动本地服务器，默认情况下，访问网址为 <a href="http://localhost:4000/">http://localhost:4000</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="comment"># 如果 4000 端口被占用了，可以运行 hexo s -p 端口 更改端口号后重试</span></span><br></pre></td></tr></table></figure><p>然后我们访问 <a href="http://localhost:4000/">http://localhost:4000</a>。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d7631a7f5c.png"/></div></div><h3 id="上传到-GitHub"><a href="#上传到-GitHub" class="headerlink" title="上传到 GitHub"></a>上传到 GitHub</h3><p>在博客根目录右键点击 Open Git Bash Here 安装 Hexo 的远程部署插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后修改_config.yml 文件末尾的 Deployment 部分。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d7a5b31bfd.png"/></div></div><p>修改成如下（修改为你的用户名与仓库名）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:854399598/854399598.github.io.git</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure><p>SSH 连接地址在仓库 <mark class="hl-label purple"><>Code</mark>  里面看到。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d7c4203c24.png"/></div></div><p>修改完成保存后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl <span class="comment"># 清楚本地缓存</span></span><br><span class="line">hexo d <span class="comment"># 开始部署</span></span><br></pre></td></tr></table></figure><p>出现下面的提示说明已经把网站上传到 GitHub 了。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d80bb83188.png"/></div></div><p>可以发现 gh-pages 分支已经被上传到 Github 上。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d810825985.png"/></div></div><p>在项目设置的 General &gt; Default branch 中将默认分支设置为之前上传的项目。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d83a5641af.png"/></div></div><p>在项目设置的 Settings &gt; Pages &gt; Branch 中，将 Github Pages 指向 gh-pages 分支的根目录，按 save 按钮进行保存。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d82a0a0253.png"/></div></div><p>打开 <mark class="hl-label purple">https://用户名.github.io</mark> ，如果打开成功，说明部署完成。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://www.helloimg.com/i/2024/12/14/675d85410c87a.png"/></div></div>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
